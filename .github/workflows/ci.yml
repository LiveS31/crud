name: CICD

on:
  push:
    branches: [ci]

jobs:
  django_tests:
    runs-on: ubuntu-22.04

    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG: '0'
      ALLOWED_HOST: ${{ secrets.ALLOWED_HOST }}
      DB_ENGINE: ${{ secrets.DB_ENGINE }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
    services:
      postgres_name:
        image: postgres:14
        env:
          POSTGRES_DB: ${{ env.DB_NAME }}
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
        ports:
          - 5432:5432
        options:
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Проверка наличия изменения
        uses: actions/checkout@v3

      - name: Установка окружения
        uses: actions/setup-python@v3

      - name: Обновление pip
        run: pip install --upgrade pip

      - name: Установка зависимостей
        run: pip install -r stocks_products/requirements.txt

      - name: Листинг кода
        #run: ls
        run: flake8 stocks_products --exclude stocks_products
# --exclude stocks_products/logistic/migrations/
# Я не разобрался как игнорировать несколько файлов. смог только директорию
      - name: тестирование кода
        #run: ls
        run: python stocks_products/manage.py test
        env:
          SECRET_KEY: ${{ env.SECRET_KEY }}
          DEBUG: '0'
          ALLOWED_HOST: ${{ env.ALLOWED_HOST }}
          DB_ENGINE: ${{ env.DB_ENGINE }}
          DB_NAME: ${{ env.DB_NAME }}
          DB_USER: ${{ env.DB_USER }}
          DB_PASSWORD: ${{ env.DB_PASSWORD }}
          DB_HOST: ${{ env.DB_HOST }}
          DB_PORT: ${{ env.DB_PORT }}

      - name: скрипт отправки на хостинг
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_IP }}
          username: ${{ secrets.HOST_USER }}
          password: ${{ secrets.HOST_PASS }}
          script: expect /home/sergey/crud/stocks_products/deploy.exp